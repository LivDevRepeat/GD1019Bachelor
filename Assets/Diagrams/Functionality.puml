@startuml
package "Lower Board"  {
   skinparam groupInheritance 2
   skinparam groupBackground #EEEBDC
    
    class Hittable {
      - hitPoints: int
      - Hit(): void
      - CustomOnHit(): void virtual
    }
    
    class Passable {
      - Pass(): void
      - CustomOnPass(): void virtual
    }
    class Launcher extends Passable {
      - Launch(direction): void
    }
    
    abstract class DrainStopper extends Hittable {
        -isActive: bool
        + Activate(): void
        + Deactivate(): void
    }
    
    
    class Kaboo extends Hittable  {
        - retractedHitPoints: 180
        + isRetracted: bool
        - CustomOnHit(): void override
    }
    
    class BigKaboo extends Hittable{
      + isRetracted: bool
      - Retract(): void
      + AllKaboosRetracted(Kaboo): void
    }
    
    entity Gordow extends Hittable {
    }
    
    entity Bumper extends Hittable {
    
    }
    
    
    class MummyBall extends Hittable {
      - hitsCount: 0
      - defeatPoints: 8 
      + Defeat(): void
    }
    

    
    class KirbySprite extends Passable{
      + state: ExpressionState
      + ChangeExpression(): void
      - CustomOnPass(): void override
    }
    
    class WarpStar extends Passable {
      + isActive: bool
      + Call(): void
      + Warp(): void
    }
    
    
    class Inlane extends Passable {
      - CustomOnPass(): void override
    }
   
  
    class Outlane extends Passable{
        - CustomOnPass(): void override
    }
    
    class EnergyDrink extends DrainStopper {
      - CustomOnHit(): void override  
    }
    
    entity MaximTomato extends DrainStopper {
   }
    
    class StarLauncher  extends Launcher {
      
    }
    
   class Scoremanager <<(S,#FF7700) Singleton>> {
      - score: int
      - highScore: int
      - bonusScore: int
      - bonusMultiplier: int
      + AddScore(): void
      + AddBonus(): void
      + AddBonusMultiplier(): void
      + ResetScore(): void
    }
    
    abstract class stateMachine {
      - currentState: State
      - nextState: State
      - ChangeState(): void
    }
    


    
    
    
    enum ExpressionState {
      SLEEP,
      WAKE,
      DOWN
    }
    
    enum Direction {
      UP,
      DOWN,
      LEFT,
      RIGHT,
      CENTER
    }
    
    Scoremanager <- Hittable
    KirbySprite - ExpressionState
    StarLauncher - Direction
    
    Kaboo--> BigKaboo:  <<modiefies>>
    BigKaboo --> StarLauncher:  <<modifies>>
    MummyBall --> WarpStar : <<calls>>
 
    KirbySprite --> MaximTomato
    KirbySprite --> EnergyDrink
    
    Inlane --> EnergyDrink : <<calls>>
        
    class Hittable extends Passable
   
   
   
    
    
    
    }
@enduml
